{"version":3,"file":"static/js/268.375ad3f1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"form\":\"LoginForm_form__gPEx5\",\"title\":\"LoginForm_title__5FilZ\",\"subtitle\":\"LoginForm_subtitle__h8Is-\",\"label\":\"LoginForm_label__F7sLE\",\"labelText\":\"LoginForm_labelText__T5gAn\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"input\":\"LoginForm_input__aQRtt\",\"inputIcon\":\"LoginForm_inputIcon__GDKJZ\",\"error\":\"LoginForm_error__012y+\",\"submitButton\":\"LoginForm_submitButton__-Yb3R\",\"loadingSpinner\":\"LoginForm_loadingSpinner__Nvc5Y\",\"spin\":\"LoginForm_spin__n4MmE\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { logIn } from '../../redux/auth/authOperations';\nimport css from './LoginForm.module.css';\n\n// SVG Icons as components\nconst EmailIcon = () => (\n  <svg className=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\n    <polyline points=\"22,6 12,13 2,6\"></polyline>\n  </svg>\n);\n\nconst LockIcon = () => (\n  <svg className=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\n    <circle cx=\"12\" cy=\"16\" r=\"1\"></circle>\n    <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n  </svg>\n);\n\nconst AlertIcon = () => (\n  <svg className=\"icon icon-sm\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n  </svg>\n);\n\nconst LoginIcon = () => (\n  <svg className=\"icon icon-sm\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path>\n    <polyline points=\"10,17 15,12 10,7\"></polyline>\n    <line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n  </svg>\n);\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await dispatch(\n        logIn({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      form.reset();\n    } catch (err) {\n      setError(`Authentication failed: ${err}`);\n      console.error('Login error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <h1 className={css.title}>Welcome Back</h1>\n        <p className={css.subtitle}>Sign in to your account to continue</p>\n\n        <label className={css.label}>\n          <span className={css.labelText}>\n            <EmailIcon />\n            Email Address\n          </span>\n          <div className={css.inputWrapper}>\n            <EmailIcon className={css.inputIcon} />\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={css.input}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n        </label>\n\n        <label className={css.label}>\n          <span className={css.labelText}>\n            <LockIcon />\n            Password\n          </span>\n          <div className={css.inputWrapper}>\n            <LockIcon className={css.inputIcon} />\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={css.input}\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n        </label>\n\n        {error && (\n          <div className={css.error}>\n            <AlertIcon />\n            {error}\n          </div>\n        )}\n\n        <button type=\"submit\" className={css.submitButton} disabled={isLoading}>\n          {isLoading ? (\n            <>\n              <div className={css.loadingSpinner}></div>\n              Signing in...\n            </>\n          ) : (\n            <>\n              <LoginIcon />\n              Sign In\n            </>\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n};\n\nexport default LoginPage;\n"],"names":["EmailIcon","_jsxs","className","viewBox","fill","stroke","strokeWidth","children","_jsx","d","points","LockIcon","x","y","width","height","rx","ry","cx","cy","r","AlertIcon","x1","y1","x2","y2","LoginIcon","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","isLoading","setIsLoading","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","form","_context","prev","next","preventDefault","currentTarget","logIn","email","elements","value","password","unwrap","reset","t0","concat","console","finish","stop","_x","apply","arguments","css","onSubmit","autoComplete","type","name","placeholder","required","disabled","_Fragment","HelmetProvider","Helmet"],"sourceRoot":""}